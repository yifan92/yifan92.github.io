2018/3/13
	-EMC-only cut + m(ee)>3.8 可以得到正确的亮度。
	-检查m(ee)<3.8的分布：将这个mdc cut变换到EMC-only方法中。
		-the info of 3rd cluster?
		-delta E?
	-BabayagaNLO 对于大能量散射的计算缺陷?	
	-slightly higher cut of m(ee)

	test lum: 74821；~75100		： 0.5% difference
	

	-The impact of generator version:
		-last time checked, it's about 0.5% for lower energy points; but strange result at 4420, need to check again.
	-on the Babayaga:
		Actually, the original formulation of BabaYaga is based on a QED Parton Shower (PS) approach 
		for the treatment of leading logarithmic(LL) QED corrections and, as such, it
		lacks the effect of O(α) non-log contributions, which are important to achieve
		a precision at the per mille level. 

	-no cut MC效率没有准备好；
		-之前记录存在；但是误差太大，没法参考。
	-v3.5的MC dst文件之前被覆盖，未重新产生

2018/3/12
	-可能bhabha0未产生完；log文件已删除无法查询，可能4280,4270能量点有问题
		-这几天服务器故障，坏作业率很高(49~109/200成功)；需重新产生
	-4200,4210 MC dst残留 bha0文件夹，冗余文件，作为bkp暂时保留
	-4230 bhabha0 因脚本错误，产生失败	

2018/3/8
	-重新产生dig0,bhabha0

2018/3/6
	-4246有一个run的信息有问题，导致MC损坏，需重新产生。
	-检查Ep_emc<1.8的事例到底是什么
	-产生子m(ee) cut的问题？
	-改写脚本：	解决时间问题；改用python?

	-sunzhentian: ppt on KKMC
	
2018/3/5
	Tracking.C运行时间仍然很长
		-将Fill hists部分改写成函数，运行时间缩短
		
	分布图：
		-deltaphi in [5,10] 的cos(theta)分布，在[0.6,0.8]区间data有明显的多出的事例
		-这部分事例集中在 |E1 - E2|>0.1 GeV区域, Ep,Em偏低处
		-要求事例同时通过MDC+EMC筛选，则pp,pm分布自然大于1.9 GeV?	
			-是E>1.8的要求引起的？			confirmed, by looking at the distribution without E requirement

2018/3/4:
	检查脚本运行时间： (300k events, 1000 means 1s)
		all code: 1080 -> 67340, 980->69030
		stop before filling histograms: 970->64280, 1080->64310
		stop before counting: 1160->61620, 1120->65050
		empty iteration: 1060->1460 (2m events)
		just get entries: 1170->1300
		before iterating on criteria: 1190->1420
		nmax_ics from 30 to 26: 1270->72780, 1170->73340
		
		commenting out codes of checking from (ics==20) to (ics==25): 1170->3960
		commenting out codes of checking ics==25: 970->62610, 1280->73360
		commenting out codes of checking from ics==23 to ics==25: 1280->69450
			-seems that different combination determines whether the code is slow or not
			-slow: (20,21,25), (20,21,22), (21,22)
			-fast: (20,21), (20,22), (22), (21)
			
		结论：不是代码局部的问题。似乎是这部分代码太长，导致解释器性能不足。	
			
	临时解决方案：comment out 几个不用的criteria
		ics=10/11/12 		E cut 1.8/1.9/1.95
		ics=4 				alternative cos
		ics=5				alternative E
		ics=13,14			delta phi in [5,10], [10,40]
		
2018/3/3:
	redid sim/rec for all data points other than scans.